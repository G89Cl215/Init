#!/bin/bash

COLUMNS=$(tput cols)

function display_title_line
{
		local LEN
		local MARGIN

		(( LEN = ${#1} - 44 ))
		(( MARGIN= (${COLUMNS} - ${LEN}) / 2 ))
		printf "%"${MARGIN}"s" " "
		printf "${1}\n"
}

function display_title
{
		display_title_line "\e[31m _____ \e[0m\e[35m  _    _ \e[0m\e[31m  _____ \e[0m\e[35m  _____ \e[0m"
		display_title_line "\e[31m|_   _|\e[0m\e[35m | \  | |\e[0m\e[31m |_   _|\e[0m\e[35m |_   _|\e[0m"
		display_title_line "\e[31m  | |  \e[0m\e[35m |  \ | |\e[0m\e[31m   | |  \e[0m\e[35m   | |  \e[0m"
		display_title_line "\e[31m _| |_ \e[0m\e[35m |   \| |\e[0m\e[31m  _| |_ \e[0m\e[35m   | |  \e[0m"
		display_title_line "\e[31m|_____|\e[0m\e[35m |_|\___|\e[0m\e[31m |_____|\e[0m\e[35m   |_|  \e[0m"
		printf "\n"
		echo "	||           _||_                            ||           "
		echo "	||__         _  _  ___   ___          _     _||  ___   ___"
		echo "	| _ | ||_||   ||  | _ | | _ | ||_|| ||_|| ||_||   _ | | __"
		echo "	||_|| |__ |   ||  ||_|| ||_|| |___| |___  |___| ||_|| ||  "
		echo "	         ||          ||                                   "
		echo "	       ___|        ___|                                   "
}

function network_menu
{
		local file_nbr

		while [[ $REPLY != 0 ]]; do
				clear
				display_title
				printf "\n|\\|ETWORK\n\nIn this file you can view any of the files below : \n\n"
				pwd
				ls
				printf "0. back to main menu\n\n"
				read -p "Type the name of the file you want to see : " file_nbr
				case $file_nbr in
						0)  break
								;;
						*) if [ -f ./"$file_nbr" ];
						then
								tput cuu1
								tput el
								printf "Here is my answer to $file_nbr\n\n"
								cat "$file_nbr"
								while [[ $selection != 0 ]]; do
										read -p "If it is relevant, you can press 1 to execute or 0 to continue: " selection
										case $selection in
												0) break
														;;
												1) ./$file_nbr
														selection=0
														printf "\n\nPress any key to continue."
														read -n 1
														;;
										esac
								done

						else 
								echo "Invalid entry."
						fi
						printf "\n\nPress any key to continue."
						read -n 1
						;;
		esac
done
cd ..
}

function system_menu
{
		local file_nbr

		while [[ $REPLY != 0 ]]; do
				clear
				display_title
				printf "  _\n_/ YSTEM\n\nIn this file you can view any of the files below : \n\n"
				pwd
				ls
				printf "0. back to main menu\n\n"
				read -p "Type the name of the file you want to see : " file_nbr
				case $file_nbr in
						0)  break
								;;
						*) if [ -f ./"$file_nbr" ];
						then
								tput cuu1
								tput el
								printf "Here is my answer to $file_nbr\n\n"
								cat "$file_nbr"
								while [[ $selection != 0 ]]; do
										read -p "If it is relevant, you can press 1 to execute or 0 to continue: " selection
										case $selection in
												0) break
														;;
												1) ./$file_nbr
														selection=0
														printf "\n\nPress any key to continue."
														read -n 1
														;;
										esac
								done
						else 
								echo "Invalid entry."
								printf "\n\nPress any key to continue."
								read -n 1
						fi
						;;
		esac
done
cd ..
}

function script_menu
{
		local file_nbr

		while [[ $REPLY != 0 ]]; do
				clear
				display_title
				printf "  _\n_/ CRIPTS\n\nIn this file you can view any of the files below : \n\n"
				pwd
				ls
				printf "0. back to main menu\n\n"
				read -p "Type the name of the file you want to see : " file_nbr
				case $file_nbr in
						0)  break
								;;
						*) if [ -f ./"$file_nbr" ];
						then
								tput cuu1
								tput el
								printf "Here is my answer to $file_nbr\n\n"
								cat "$file_nbr" | less
								while [[ $file_nbr != 03 && $selection != 0 ]]; do
										read -p "If it is relevant, you can press 1 to execute or 0 to continue: " selection
										case $selection in
												0) break
														;;
												1) ./$file_nbr
														selection=0
														printf "\n\nPress any key to continue."
														read -n 1
														;;
										esac
								done

						else 
								echo "Invalid entry."
						fi
						printf "\n\nPress any key to continue."
						read -n 1
						;;
		esac
done
cd ..
}

tput smcup

while [[ $REPLY != 0 ]]; do
		clear
		display_title
		cat <<- _EOF_
		Please Select:

		1. Network menu
		2. System menu
		3. Scripts
		4. Author file
		0. Quit

		_EOF_

		read -p "Enter selection [0-3] > " selection

		# Clear area beneath menu
		tput cup 12 0

		tput ed
		tput cup 15 0
		case $selection in
				1) cd network
						pwd
						network_menu
						;;
				2) cd system
						system_menu
						;;
				3) cd scripts 
						script_menu
						;;
				4) cat auteur
						;;
				0)  break
						;;
				*)  echo "Invalid entry."
						printf "\n\nPress any key to continue."
						read -n 1
						;;
		esac
done

tput rmcup
echo "Program terminated."
